local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\127\82","\95\81\124\55\187\177\78\60"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,2 -1 ,1));return "";else local v94=0;local v95;while true do if (v94==0) then v95=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v95,v30);v30=nil;v122=1;end if (v122==1) then return v123;end end else return v95;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v96=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + (1 -0))) ;return v96-(v96%1) ;else local v97=0;local v98;while true do if (v97==0) then v98=2^(v44-1) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (0==v51) then v52,v53,v54,v55=v9(v27,v29,v29 + (7 -4) );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * (16777835 -(555 + 64))) + (v54 * (66467 -(857 + 74))) + (v53 * (824 -(367 + 201))) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else local v124=0;while true do if (v124==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * ((1 + 0)/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (v56==0) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,948 -(214 + 713) ,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==1) then v65=v11(v27,v29,(v29 + v63) -(1 + 0) );v29=v29 + v63 ;v64=2;end if (v64==0) then v65=nil;if  not v63 then v63=v34();if (v63==0) then return "";end end v64=1;end if (v64==2) then v66={};for v102=1, #v65 do v66[v102]=v10(v9(v11(v65,v102,v102)));end v64=3;end if (3==v64) then return v14(v66);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==0) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end if (1==v67) then v72=v34();v73={};for v104=878 -(282 + 595) ,v72 do local v105=0;local v106;local v107;while true do if (v105==0) then v106=v32();v107=nil;v105=1;end if (v105==1) then if (v106==1) then v107=v32()~=0 ;elseif (v106==2) then v107=v35();elseif (v106==(1640 -(1523 + 114))) then v107=v36();end v73[v104]=v107;break;end end end v71[3]=v32();v67=2;end if (v67==2) then for v108=1 + 0 ,v34() do local v109=v32();if (v31(v109,1 -0 ,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v73[v121[2]];end if (v31(v120,2,2 + 0 )==1) then v121[1 + 2 ]=v73[v121[3]];end v118=3;end if (v118==3) then if (v31(v120,3,3)==1) then v121[4]=v73[v121[4]];end v68[v108]=v121;break;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v133=0;while true do if (0==v133) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then local v138=0;while true do if (v138==0) then v121[3]=v34() -(2^16) ;v121[121 -(32 + 85) ]=v33();break;end end end v118=2;end if (0==v118) then v119=v31(v109,2,3);v120=v31(v109,4,6);v118=1;end end end end for v110=1,v34() do v69[v110-1 ]=v39();end return v71;end end end local function v40(v74,v75,v76) local v77=v74[958 -(892 + 65) ];local v78=v74[2];local v79=v74[3];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -(2 -1) ;local v89={};local v90={};for v99=0,v88 do if (v99>=v82) then v86[v99-v82 ]=v87[v99 + 1 ];else v90[v99]=v87[v99 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v100=0;while true do if (v100==0) then v92=v80[v84];v93=v92[1];v100=1;end if (v100==1) then if (v93<=43) then if (v93<=21) then if (v93<=10) then if (v93<=4) then if (v93<=1) then if (v93==0) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else local v140=v92[2];local v141=v92[4];local v142=v140 + 2 ;local v143={v90[v140](v90[v140 + 1 ],v90[v142])};for v211=1,v141 do v90[v142 + v211 ]=v143[v211];end local v144=v143[1 -0 ];if v144 then v90[v142]=v144;v84=v92[3];else v84=v84 + (1 -0) ;end end elseif (v93<=2) then local v145=0;local v146;while true do if (v145==0) then v146=v92[352 -(87 + 263) ];do return v90[v146](v21(v90,v146 + 1 ,v92[3]));end break;end end elseif (v93>(183 -(67 + 113))) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else local v231=v92[2];do return v90[v231](v21(v90,v231 + 1 ,v92[3 + 0 ]));end end elseif (v93<=7) then if (v93<=5) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v93==6) then local v232=0;local v233;local v234;while true do if (0==v232) then v233=v92[2];v234={};v232=1;end if (v232==1) then for v406=1, #v89 do local v407=0;local v408;while true do if (0==v407) then v408=v89[v406];for v473=0, #v408 do local v474=0;local v475;local v476;local v477;while true do if (v474==1) then v477=v475[2];if ((v476==v90) and (v477>=v233)) then local v493=0;while true do if (v493==0) then v234[v477]=v476[v477];v475[1]=v234;break;end end end break;end if (0==v474) then v475=v408[v473];v476=v475[1];v474=1;end end end break;end end end break;end end else local v235=0;local v236;local v237;while true do if (v235==1) then v90[v236 + 1 ]=v237;v90[v236]=v237[v92[4]];break;end if (v235==0) then v236=v92[2];v237=v90[v92[7 -4 ]];v235=1;end end end elseif (v93<=8) then local v148=0;local v149;while true do if (v148==0) then v149=v92[2];v90[v149]=v90[v149](v21(v90,v149 + 1 ,v85));break;end end elseif (v93==9) then v90[v92[2]]=v92[3];else v90[v92[2]]=v90[v92[3 + 0 ]][v90[v92[4]]];end elseif (v93<=15) then if (v93<=12) then if (v93==11) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]]=v76[v92[3]];end elseif (v93<=13) then v90[v92[2]]={};elseif (v93==14) then v75[v92[3]]=v90[v92[2]];else local v244=0;local v245;local v246;local v247;while true do if (v244==1) then v247=0;for v409=v245,v92[4] do local v410=0;while true do if (v410==0) then v247=v247 + 1 ;v90[v409]=v246[v247];break;end end end break;end if (v244==0) then v245=v92[2];v246={v90[v245](v21(v90,v245 + 1 ,v85))};v244=1;end end end elseif (v93<=18) then if (v93<=16) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[11 -8 ];end elseif (v93>17) then local v249=v92[2];local v250=v90[v249 + 2 ];local v251=v90[v249] + v250 ;v90[v249]=v251;if (v250>0) then if (v251<=v90[v249 + 1 ]) then local v411=0;while true do if (v411==0) then v84=v92[3];v90[v249 + 3 ]=v251;break;end end end elseif (v251>=v90[v249 + 1 ]) then local v412=0;while true do if (0==v412) then v84=v92[3];v90[v249 + 3 ]=v251;break;end end end else v90[v92[2]]=v75[v92[3]];end elseif (v93<=19) then local v154=0;local v155;while true do if (v154==0) then v155=v92[2];do return v21(v90,v155,v85);end break;end end elseif (v93>20) then local v255=0;local v256;local v257;local v258;while true do if (1==v255) then v258=v90[v256] + v257 ;v90[v256]=v258;v255=2;end if (v255==2) then if (v257>0) then if (v258<=v90[v256 + 1 ]) then local v459=0;while true do if (v459==0) then v84=v92[3];v90[v256 + 3 ]=v258;break;end end end elseif (v258>=v90[v256 + 1 ]) then local v460=0;while true do if (v460==0) then v84=v92[3];v90[v256 + (955 -(802 + 150)) ]=v258;break;end end end break;end if (v255==0) then v256=v92[2];v257=v90[v256 + 2 ];v255=1;end end else local v259=v92[5 -3 ];local v260,v261=v83(v90[v259](v90[v259 + 1 ]));v85=(v261 + v259) -1 ;local v262=0;for v336=v259,v85 do local v337=0;while true do if (v337==0) then v262=v262 + 1 ;v90[v336]=v260[v262];break;end end end end elseif (v93<=32) then if (v93<=26) then if (v93<=23) then if (v93==(39 -17)) then local v156=0;local v157;while true do if (v156==0) then v157=v92[2];v90[v157](v21(v90,v157 + 1 ,v92[3]));break;end end else v90[v92[2]]=v90[v92[3]][v92[3 + 1 ]];end elseif (v93<=24) then v90[v92[2]]=v90[v92[3]];elseif (v93>25) then local v263=v92[2];local v264=v92[4];local v265=v263 + 2 ;local v266={v90[v263](v90[v263 + 1 ],v90[v265])};for v339=1,v264 do v90[v265 + v339 ]=v266[v339];end local v267=v266[1];if v267 then local v356=0;while true do if (v356==0) then v90[v265]=v267;v84=v92[3];break;end end else v84=v84 + 1 ;end else local v268=0;local v269;local v270;while true do if (v268==0) then v269=v92[2];v270=v90[v92[1000 -(915 + 82) ]];v268=1;end if (v268==1) then v90[v269 + 1 ]=v270;v90[v269]=v270[v92[4]];break;end end end elseif (v93<=29) then if (v93<=27) then local v162=0;local v163;local v164;local v165;local v166;while true do if (v162==1) then v85=(v165 + v163) -1 ;v166=0;v162=2;end if (v162==2) then for v357=v163,v85 do local v358=0;while true do if (v358==0) then v166=v166 + 1 ;v90[v357]=v164[v166];break;end end end break;end if (v162==0) then v163=v92[2];v164,v165=v83(v90[v163](v21(v90,v163 + 1 ,v85)));v162=1;end end elseif (v93>28) then local v271=0;local v272;while true do if (0==v271) then v272=v92[2];v90[v272]=v90[v272](v21(v90,v272 + 1 ,v92[3]));break;end end else local v273=0;local v274;local v275;local v276;local v277;while true do if (v273==2) then for v415=v274,v85 do v277=v277 + 1 ;v90[v415]=v275[v277];end break;end if (v273==1) then v85=(v276 + v274) -1 ;v277=0;v273=2;end if (v273==0) then v274=v92[2];v275,v276=v83(v90[v274](v90[v274 + (2 -1) ]));v273=1;end end end elseif (v93<=30) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==31) then local v279=0;local v280;local v281;local v282;while true do if (v279==1) then v282=0;for v418=v280,v92[4] do local v419=0;while true do if (v419==0) then v282=v282 + 1 ;v90[v418]=v281[v282];break;end end end break;end if (v279==0) then v280=v92[2];v281={v90[v280](v21(v90,v280 + 1 ,v85))};v279=1;end end else local v283=v92[2 + 0 ];v90[v283]=v90[v283]();end elseif (v93<=37) then if (v93<=34) then if (v93==33) then local v167=0;local v168;local v169;local v170;while true do if (v167==0) then v168=v92[2];v169=v90[v168];v167=1;end if (v167==1) then v170=v90[v168 + 2 ];if (v170>0) then if (v169>v90[v168 + 1 ]) then v84=v92[3];else v90[v168 + 3 ]=v169;end elseif (v169<v90[v168 + 1 ]) then v84=v92[3];else v90[v168 + 3 ]=v169;end break;end end else v90[v92[2]][v90[v92[3]]]=v90[v92[4 -0 ]];end elseif (v93<=35) then local v173=0;local v174;local v175;while true do if (0==v173) then v174=v92[2];v175=v90[v174];v173=1;end if (v173==1) then for v359=v174 + 1 ,v85 do v15(v175,v90[v359]);end break;end end elseif (v93>36) then v90[v92[1189 -(1069 + 118) ]]=v76[v92[3]];else local v287=0;local v288;local v289;local v290;local v291;while true do if (v287==0) then v288=v92[2];v289,v290=v83(v90[v288](v21(v90,v288 + 1 ,v85)));v287=1;end if (v287==1) then v85=(v290 + v288) -1 ;v291=0 -0 ;v287=2;end if (2==v287) then for v420=v288,v85 do local v421=0;while true do if (0==v421) then v291=v291 + 1 ;v90[v420]=v289[v291];break;end end end break;end end end elseif (v93<=40) then if (v93<=38) then v90[v92[2]]=v90[v92[3]];elseif (v93>39) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else do return v90[v92[2]]();end end elseif (v93<=41) then local v178=0;local v179;while true do if (v178==0) then v179=v92[2];v90[v179](v21(v90,v179 + 1 ,v85));break;end end elseif (v93>(91 -49)) then local v293=0;local v294;while true do if (v293==0) then v294=v92[2];v90[v294](v21(v90,v294 + 1 ,v85));break;end end else local v295=v92[1 + 1 ];v90[v295]=v90[v295](v21(v90,v295 + 1 ,v92[3]));end elseif (v93<=65) then if (v93<=54) then if (v93<=48) then if (v93<=45) then if (v93>(77 -33)) then for v214=v92[2 + 0 ],v92[3] do v90[v214]=nil;end else local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==1) then v85=(v183 + v181) -1 ;v184=0;v180=2;end if (v180==2) then for v360=v181,v85 do local v361=0;while true do if (v361==0) then v184=v184 + 1 ;v90[v360]=v182[v184];break;end end end break;end if (v180==0) then v181=v92[793 -(368 + 423) ];v182,v183=v83(v90[v181](v21(v90,v181 + 1 ,v92[3])));v180=1;end end end elseif (v93<=46) then v84=v92[3];elseif (v93>47) then do return;end else do return v90[v92[2]]();end end elseif (v93<=51) then if (v93<=49) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];elseif (v93==50) then local v297=0;local v298;local v299;while true do if (v297==0) then v298=v92[2];v299=v90[v298];v297=1;end if (v297==1) then for v422=v298 + 1 ,v85 do v15(v299,v90[v422]);end break;end end else local v300=0;local v301;while true do if (v300==0) then v301=v92[2];do return v21(v90,v301,v85);end break;end end end elseif (v93<=52) then v90[v92[2]]();elseif (v93>53) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else v90[v92[2]]=v90[v92[3]][v92[12 -8 ]];end elseif (v93<=59) then if (v93<=56) then if (v93==55) then local v188=v81[v92[3]];local v189;local v190={};v189=v18({},{[v7("\191\18\199\81\201\133\53","\173\224\77\174\63")]=function(v216,v217) local v218=0;local v219;while true do if (0==v218) then v219=v190[v217];return v219[1][v219[2]];end end end,[v7("\240\116\32\129\86\79\193\79\43\156","\38\175\43\78\228\33")]=function(v220,v221,v222) local v223=v190[v221];v223[1][v223[2]]=v222;end});for v225=1,v92[4] do local v226=0;local v227;while true do if (v226==1) then if (v227[1]==24) then v190[v225-1 ]={v90,v227[3]};else v190[v225-1 ]={v75,v227[3]};end v89[ #v89 + 1 ]=v190;break;end if (v226==0) then v84=v84 + 1 ;v227=v80[v84];v226=1;end end end v90[v92[2]]=v40(v188,v189,v76);elseif (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=57) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>58) then for v350=v92[2],v92[3] do v90[v350]=nil;end else v90[v92[2]]();end elseif (v93<=62) then if (v93<=60) then local v192=0;local v193;while true do if (v192==0) then v193=v92[2];v90[v193]=v90[v193](v21(v90,v193 + 1 ,v85));break;end end elseif (v93>61) then local v307=v92[2];v90[v307](v21(v90,v307 + 1 ,v92[3]));else v90[v92[2]]=v92[3];end elseif (v93<=63) then v90[v92[2]]=v90[v92[3]]%v90[v92[22 -(10 + 8) ]] ;elseif (v93==(246 -182)) then local v310=0;local v311;while true do if (v310==0) then v311=v92[2];v90[v311](v90[v311 + 1 ]);break;end end else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=76) then if (v93<=(512 -(416 + 26))) then if (v93<=67) then if (v93>66) then v90[v92[6 -4 ]][v90[v92[2 + 1 ]]]=v90[v92[4]];else v90[v92[3 -1 ]]= #v90[v92[3]];end elseif (v93<=68) then local v198=0;local v199;local v200;local v201;local v202;while true do if (v198==2) then for v365=v199,v85 do v202=v202 + 1 ;v90[v365]=v200[v202];end break;end if (0==v198) then v199=v92[2];v200,v201=v83(v90[v199](v21(v90,v199 + 1 ,v92[3])));v198=1;end if (v198==1) then v85=(v201 + v199) -1 ;v202=0;v198=2;end end elseif (v93>69) then local v313=0;local v314;while true do if (v313==0) then v314=v92[2];v90[v314]=v90[v314]();break;end end else local v315=0;local v316;local v317;local v318;while true do if (v315==1) then v318={};v317=v18({},{[v7("\186\241\119\12\129\203\102","\98\229\174\30")]=function(v425,v426) local v427=0;local v428;while true do if (0==v427) then v428=v318[v426];return v428[439 -(145 + 293) ][v428[2]];end end end,[v7("\226\6\21\232\145\88\227\7\216\33","\99\189\89\123\141\230\49\141")]=function(v429,v430,v431) local v432=0;local v433;while true do if (v432==0) then v433=v318[v430];v433[1][v433[2]]=v431;break;end end end});v315=2;end if (v315==2) then for v434=1,v92[4] do v84=v84 + 1 ;local v435=v80[v84];if (v435[1]==24) then v318[v434-1 ]={v90,v435[3]};else v318[v434-1 ]={v75,v435[3]};end v89[ #v89 + 1 ]=v318;end v90[v92[2]]=v40(v316,v317,v76);break;end if (v315==0) then v316=v81[v92[3]];v317=nil;v315=1;end end end elseif (v93<=73) then if (v93<=71) then v75[v92[3]]=v90[v92[1488 -(998 + 488) ]];elseif (v93==72) then do return;end elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[1 + 2 ];end elseif (v93<=74) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>75) then local v320=0;local v321;local v322;while true do if (1==v320) then for v437=1, #v89 do local v438=0;local v439;while true do if (v438==0) then v439=v89[v437];for v478=0, #v439 do local v479=0;local v480;local v481;local v482;while true do if (v479==1) then v482=v480[2];if ((v481==v90) and (v482>=v321)) then local v494=0;while true do if (v494==0) then v322[v482]=v481[v482];v480[1]=v322;break;end end end break;end if (v479==0) then v480=v439[v478];v481=v480[1];v479=1;end end end break;end end end break;end if (v320==0) then v321=v92[2];v322={};v320=1;end end elseif (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=81) then if (v93<=78) then if (v93>(64 + 13)) then v84=v92[3];else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=79) then local v207=0;local v208;while true do if (v207==0) then v208=v92[2];v90[v208](v90[v208 + 1 ]);break;end end elseif (v93==80) then if v90[v92[2]] then v84=v84 + (773 -(201 + 571)) ;else v84=v92[3];end else local v323=0;local v324;local v325;local v326;while true do if (0==v323) then v324=v92[2];v325=v90[v324];v323=1;end if (v323==1) then v326=v90[v324 + 2 ];if (v326>0) then if (v325>v90[v324 + 1 ]) then v84=v92[3];else v90[v324 + 3 ]=v325;end elseif (v325<v90[v324 + 1 ]) then v84=v92[3];else v90[v324 + 3 ]=v325;end break;end end end elseif (v93<=84) then if (v93<=82) then v90[v92[2]]=v92[3]~=0 ;elseif (v93==83) then v90[v92[2]]=v75[v92[3]];elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=85) then v90[v92[1140 -(116 + 1022) ]]={};elseif (v93==86) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v92[3] + v90[v92[4]] ;end v84=v84 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
